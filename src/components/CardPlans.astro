---
interface Props {
    planName: string;
    price: number;
    megas: number;
    desc?: string;
    advantages?: string[];
    btnActive?: boolean;
    favorite?: boolean;
}

let {
    planName,
    price,
    megas,
    desc,
    advantages,
    btnActive = true,
    favorite = false,
} = Astro.props;
---

<div
    class={favorite
        ? `w-full h-[34rem] max-w-sm p-4 bg-white rounded-lg shadow-sm sm:p-8 flex flex-col justify-between relative border-4 border-[var(--bg-main-green)]`
        : `w-full h-[34rem] max-w-sm p-4 bg-white rounded-lg shadow-sm sm:p-8 flex flex-col justify-between relative border border-gray-200`}
>
    {
        favorite && (
            <div class="w-32 h-10 bg-[var(--bg-main-green)] absolute right-0 top-0 rounded-bl-sm rounded-tr-sm justify-center flex items-center">
                <h3 class="text-black font-semibold">MÃ¡s Popular</h3>
            </div>
        )
    }
    <div class="w-full">
        <h5 class="mb-4 text-xl font-medium text-gray-500">
            {planName}
        </h5>
        <div class="flex items-baseline text-gray-900">
            <span class="text-3xl font-semibold">$</span>
            <span class="text-5xl font-extrabold tracking-tight">{price}</span>
            <span class="ms-1 text-xl font-normal text-gray-500">/mes</span>
        </div>
        <ul role="list" class="space-y-5 my-7">
            <li class="flex items-center">
                <svg
                    class="shrink-0 w-4 h-4 text-blue-700"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                >
                    <path
                        d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"
                    ></path>
                </svg>
                <span
                    class="text-xl font-normal leading-tight text-gray-500 ms-3"
                    ><strong>{megas}</strong> Mbps</span
                >
            </li>

            {
                advantages ? (
                    advantages?.map((data) => (
                        <li class="flex items-center w-72">
                            <svg
                                class="shrink-0 w-4 h-4 text-blue-700"
                                aria-hidden="true"
                                xmlns="http://www.w3.org/2000/svg"
                                fill="currentColor"
                                viewBox="0 0 20 20"
                            >
                                <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
                            </svg>
                            <span class="text-base font-normal leading-tight text-gray-500 dark:text-gray-400 ms-3">
                                {data}
                            </span>
                        </li>
                    ))
                ) : (
                    <p class="space-y-5 my-7 w-[300px] sm:w-full">{desc}</p>
                )
            }
            <!--  -->
        </ul>
    </div>
    {
        btnActive ? (
            <button
                type="button"
                class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-200 font-medium rounded-lg text-sm px-5 py-2.5 inline-flex justify-center w-full text-center"
            >
                Escoger Plan
            </button>
        ) : (
            <button
                type="button"
                disabled
                class="text-white bg-gray-600 font-medium rounded-lg text-sm px-5 py-2.5 inline-flex justify-center w-full text-center"
            >
                Escoger Plan
            </button>
        )
    }
</div>
