---
let { plan } = Astro.props;
---

<div
    class={`w-full h-[34rem] max-w-sm p-6 bg-white rounded-lg shadow-sm sm:p-8 flex flex-col relative ${plan.highlight ? "ring-2 ring-[var(--bg-main-green)]" : "border border-gray-200"}`}
>
    {
        plan.highlight && (
            <div class="w-32 h-10 bg-[var(--bg-main-green)] absolute right-0 top-0 rounded-bl-sm rounded-tr-sm justify-center flex items-center">
                <h3 class="text-black font-semibold">Más Popular</h3>
            </div>
        )
    }
    <h5 class="mb-2 text-2xl font-semibold tracking-tight text-gray-900">
        {plan.name}
    </h5>

    <p class="mb-1 text-4xl font-extrabold text-gray-900">
        {plan.speed}
    </p>
    <p class="mb-4 font-normal text-gray-500">Velocidad Simétrica</p>

    <p class="mb-5 font-normal text-gray-500 flex-grow w-72 sm:w-fit">
        {plan.description}
    </p>

    <ul role="list" class="mb-6 space-y-3 text-left text-gray-500">
        {
            plan.features.map((feature: string) => (
                <li class="flex items-center space-x-3">
                    {/* */}
                    <svg
                        class="flex-shrink-0 w-5 h-5 text-green-500"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            fill-rule="evenodd"
                            d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                            clip-rule="evenodd"
                        />
                    </svg>
                    <span>{feature}</span>
                </li>
            ))
        }
    </ul>

    <div class="flex items-baseline text-gray-900 mb-5">
        <span class="text-3xl font-semibold">$</span>
        <span class="text-5xl font-extrabold tracking-tight">
            {plan.price}
        </span>
        <span class="ml-1 text-xl font-normal text-gray-500"> /mes </span>
    </div>

    <a
        href={plan.ctaLink}
        class="mt-auto text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center w-full transition-colors duration-200"
    >
        {plan.ctaText}
    </a>
</div>
